# A registered user
type User {
  # Unique id for the user
  id: ID!
  # Name of the user
  name: String!
  # All posts that they have made
  posts: [Post]!
}

# A post on a topic
type Post {
  # Unique id for a post
  id: ID!
  # Post's title
  title: String!
  # Post's content
  content: String!
  # Where the post was made
  community: Community!
  # Post's author
  author: User!
}

# A community of posts and users
type Community {
  # Unique id for a community
  id: ID!
  # Community's proper name
  name: String!
  # Posts in a community
  posts(offset: Int, limit: Int): [Post!]!
  # Issues published in a community
  issues(offset: Int, limit: Int): [Issue!]!
}

# A published issue from a community consisting of posts
type Issue {
  # Unique id given to the issue
  id: ID!
  # Headline for the issue
  headline: String!
  # Date of publication
  published: String!
  # All posts in a given issue
  posts: [Post!]!
  # Community the issue was published in
  community: Community!
}

type Query {
  # Information about the current user
  self: User
  # Find a user by id
  user(id: ID!): User
  # Find a post by id
  post(id: ID!): Post
  # Find a community by id
  community(id: ID!): Community
}

schema {
  query: Query
}
